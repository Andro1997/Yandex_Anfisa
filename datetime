import datetime as dt

Тип данных datetime похож на уже привычные вам int, string и dict. 
Он нужен, чтобы хранить информацию о конкретном моменте времени: год, месяц, день, час, минуты, секунды и микросекунды.

Чтобы создать объект этого типа, нужно вызвать функцию datetime() из библиотеки dt 
(похоже на вызов функции set() для создания множества, не правда ли?) 
Она принимает обязательные аргументы — год, месяц и день, — и необязательные: час, минута, секунда и микросекунда, 
которые по умолчанию равны нулю.

Создадим объект типа datetime с датой и временем старта Гагарина:
import datetime as dt 

# взлёт: 1961 год, 12 апреля, 9 часов утра, 7 минут 
start_time = dt.datetime(1961, 4, 12, 9, 7, 0)

print(start_time)
1961-04-12 09:07:00

_____________________________________________________________________________________________________________________________________

Тип данных datetime позволяет просто вычитать даты друг из друга, как обычные числа. 
Вот время между стартом Гагарина и его приземлением:

import datetime as dt 
    
start_time = dt.datetime(1961, 4, 12, 9, 7, 0)
    
# дата и время посадки: 1961 год, 12 апреля, 10 часов, 55 минут
landing_time = dt.datetime(1961, 4, 12, 10, 55, 0)
    
print(landing_time - start_time)
1:48:00

_____________________________________________________________________________________________________________________________________

Нельзя сложить переменную типа datetime с переменной типа int.
На такой случай есть тип timedelta()
Этот тип тоже живёт в библиотеке dt. А объект такого типа создаётся функцией timedelta():

import datetime as dt

period = dt.timedelta(hours=3) # сохраняем промежуток времени в три часа
print(period)
3:00:00

И прибавляем его к значению времени по UTC:
now = dt.datetime.utcnow()
period = dt.timedelta(hours=3)
    
moscow_moment = now + period
    
print(moscow_moment) # будет напечатано текущее время в Москве
_____________________________________________________________________________________________________________________________________

В аргументах функции timedelta() среди прочего можно указывать:
days (дни), hours (часы), minutes (минуты), seconds (секунды), microseconds (микросекунды).

Пример:
Победитель Гран-при Австралии чемпионата мира Формулы-1 2019 года, 
Вале Боттас проехал свой самый быстрый круг за 1 минуту 25 секунд и 273250 микросекунд. 
Второй результат показал Льюис Хэмилтон с разницей в 208860 микросекунд. 
Вычислим время самого быстрого круга Хэмилтона.
import datetime as dt

time_bottas = dt.timedelta(minutes=1, seconds=25,
                           microseconds=273250)
time_hamilton = time_bottas + dt.timedelta(microseconds=208860)

print(time_hamilton)
0:01:25.482110
______________________________________________________________________________________________________________________________________
Напишите функцию, которая по названию города скажет, сколько там сейчас времени.
Мы заготовили словарь UTC_OFFSET (англ. offset, «сдвиг»), 
где для каждого города записана разница местного времени и UTC в часах.

import datetime as dt

UTC_OFFSET = {
    'Санкт-Петербург': 3,
    'Москва': 3,
    'Самара': 4,
    'Новосибирск': 7,
    'Екатеринбург': 5,
    'Нижний Новгород': 3,
    'Казань': 3,
    'Челябинск': 5,
    'Омск': 6,
    'Ростов-на-Дону': 3,
    'Уфа': 5,
    'Красноярск': 7,
    'Пермь': 5,
    'Воронеж': 3,
    'Волгоград': 4,
    'Краснодар': 3,
    'Калининград': 2
}

def what_time(city):
    cities = dt.datetime.utcnow()
    time = dt.timedelta(hours = UTC_OFFSET[city])
    period = cities + time
    return period

print(what_time('Екатеринбург'))

2020-03-30 03:18:04.248541
_________________________________________________________________________________________________________________________________________


Напишите функцию, которая по имени друга скажет, сколько у него сейчас времени.
В словаре DATABASE хранятся данные о том, кто из друзей где живёт.

import datetime as dt


DATABASE = {
    'Серёга': 'Омск',
    'Соня': 'Москва',
    'Дима': 'Челябинск',
    'Алина': 'Красноярск',
    'Егор': 'Пермь'
}

UTC_OFFSET = {
    'Санкт-Петербург': 3,
    'Москва': 3,
    'Самара': 4,
    'Новосибирск': 7,
    'Екатеринбург': 5,
    'Нижний Новгород': 3,
    'Казань': 3,
    'Челябинск': 5,
    'Омск': 6,
    'Ростов-на-Дону': 3,
    'Уфа': 5,
    'Красноярск': 7,
    'Пермь': 5,
    'Воронеж': 3,
    'Волгоград': 4,
    'Краснодар': 3,
    'Калининград': 2
}


def what_time(friend):
    time = dt.datetime.utcnow() # Чтобы получить текущее время, вызовите метод 
    city_friend = DATABASE[friend] # Затем нужно взять город, в котором живет друг: 
    step = dt.timedelta(hours = UTC_OFFSET[city_friend]) 
    period = time + step # И наконец, к текущему времени нужно прибавить промежуток, 
                        # равный сдвигу времени городе друга относительно UTC:
    return period

print(what_time('Алина'))


2020-03-30 05:25:09.595301
