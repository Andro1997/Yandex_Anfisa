Python умеет удобно формировать адреса URL, подставляя в них параметры из словаря. 
Функция get() сама производит нужные преобразования, нужно лишь передать параметры через именованный аргумент params:

import requests

search_parameters = {
    'text': 'что такое backend',
    'lr': 213
}
url = 'https://yandex.ru/search/'
# Функция get() приняла на вход URL и параметры поиска,
# а дальше она знает, что делать.
response = requests.get(url, params=search_parameters)

print(response.status_code)
print(response.url)

200
https://yandex.ru/search/?text=%D1%87%D1%82%D0%BE+%D1%82%D0%B0%D0%BA%D0%BE%D0%B5+backend&lr=213

Любимое число бэкендеров — это 200. Оно значит, что сервер всё понял и ответил как надо.
_________________________________________________________________________________________________________________________________________

Бывают такие параметры, которым не нужно присваивать значение, а достаточно передать только имя. 
Например, параметр u сервиса wttr.in переведёт все величины в английскую систему мер (градусы Фаренгейта, мили, дюймы): 
http://wttr.in/?u . Для таких параметров в словаре в качестве значения указывается пустая строка.

import requests
    
        
parameters = {
    'u': '',
    'T': ''
}
url = 'http://wttr.in'

# пераметры передаются через аргумент params
response = requests.get(url, params=parameters)

print(response.text)

Weather report: Moscow, Russia

     \   /     Sunny
      .-.      71..75 °F      
   ― (   ) ―   → 6 mph        
      `-’      6 mi           
     /   \     0.0 in
